services:

  proxy:
    container_name: "nginx"
    image: nginx:stable-alpine
    working_dir: /application
    restart:
      on-failure
    volumes:
      - ./application:/application
      - ./application/Logs/Nginx:/var/log/nginx/
      - ./.docker/nginx/conf/nginx.conf:/etc/nginx/conf/nginx.conf
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "3500:3500" #STATIC
      - "3000:3000" #SINGLETHREAD
      - "4000:4000" #MULTITHREAD
    depends_on:
      - php
    networks:
      - default

  php:
    container_name: "php"
    build: ./.docker/php
    working_dir: /application
    volumes:
      - ./application/:/application
      - ./.docker/php/conf.d:/usr/local/etc/php/conf.d
      - ./.docker/php/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "9500:9500"
      - "9000:9000"
    networks:
      - default

  redis:
    container_name: ${REDIS_SERVER}
    build: .docker/redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASS}
    volumes:
      - ./.docker/redis/storage:/data
    restart: on-failure

  mysql:
    container_name: ${MYSQL_SERVER}
    build: ./.docker/mysql
    restart: always
    command: "--character-set-server=utf8mb4"
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./.docker/mysql/scripts:/docker-entrypoint-initdb.d/
      - ./.docker/mysql/storage:/var/lib/mysql:rw
      - ./application/Logs/Mysql:/var/lib/mysql-logs:rw

networks:
  default:
    driver: bridge
